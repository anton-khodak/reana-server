{
  "definitions": {},
  "info": {
    "description": "Submit workflows to be run on REANA Cloud",
    "title": "REANA Server",
    "version": "0.1"
  },
  "parameters": {},
  "paths": {
    "/api/analyses": {
      "get": {
        "description": "This resource return all current analyses in JSON format.",
        "operationId": "get_analyses",
        "parameters": [
          {
            "description": "Required. Organization which the analysis belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of analysis owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded. The response contains the list of all analyses.",
            "examples": {
              "application/json": [
                {
                  "id": "256b25f4-4cfb-4684-b7a8-73872ef455a1",
                  "organization": "default_org",
                  "status": "running",
                  "user": "00000000-0000-0000-0000-000000000000"
                },
                {
                  "id": "3c9b117c-d40a-49e3-a6de-5f89fcada5a3",
                  "organization": "default_org",
                  "status": "finished",
                  "user": "00000000-0000-0000-0000-000000000000"
                },
                {
                  "id": "72e3ee4f-9cd3-4dc7-906c-24511d9f5ee3",
                  "organization": "default_org",
                  "status": "waiting",
                  "user": "00000000-0000-0000-0000-000000000000"
                },
                {
                  "id": "c4c0a1a6-beef-46c7-be04-bf4b3beca5a1",
                  "organization": "default_org",
                  "status": "waiting",
                  "user": "00000000-0000-0000-0000-000000000000"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "organization": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Request failed. Internal controller error.",
            "examples": {
              "application/json": {
                "message": "Either organization or user doesn't exist."
              }
            }
          }
        },
        "summary": "Returns list of all current analyses in REANA."
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This resource is expecting a REANA specification in JSON format with all the necessary information to instantiate a workflow.",
        "operationId": "create_analysis",
        "parameters": [
          {
            "description": "Required. Organization which the worklow belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of workflow owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "Remote repository which contains a valid REANA specification.",
            "in": "query",
            "name": "spec",
            "required": false,
            "type": "string"
          },
          {
            "description": "REANA specification with necessary data to instantiate an analysis.",
            "in": "body",
            "name": "reana_spec",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Request succeeded. The workflow has been created.",
            "examples": {
              "application/json": {
                "message": "The workflow has been successfully created.",
                "workflow_id": "cdcf48b1-c2f3-4693-8230-b066e088c6ac"
              }
            },
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "workflow_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed"
          },
          "500": {
            "description": "Request failed. Internal controller error."
          },
          "501": {
            "description": "Request failed. Not implemented."
          }
        },
        "summary": "Creates a new workflow based on a REANA specification file."
      }
    },
    "/api/analyses/{analysis_id}/status": {
      "get": {
        "description": "This resource reports the status of an analysis. Resource is expecting a analysis UUID.",
        "operationId": "get_analysis_status",
        "parameters": [
          {
            "description": "Required. Organization which the worklow belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of workflow owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. Analysis UUID.",
            "in": "path",
            "name": "analysis_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded. Info about an analysis, including the status is returned.",
            "examples": {
              "application/json": {
                "id": "256b25f4-4cfb-4684-b7a8-73872ef455a1",
                "organization": "default_org",
                "status": "created",
                "user": "00000000-0000-0000-0000-000000000000"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed.",
            "examples": {
              "application/json": {
                "message": "Malformed request."
              }
            }
          },
          "403": {
            "description": "Request failed. User is not allowed to access workflow.",
            "examples": {
              "application/json": {
                "message": "User 00000000-0000-0000-0000-000000000000 is not allowed to access workflow 256b25f4-4cfb-4684-b7a8-73872ef455a1"
              }
            }
          },
          "500": {
            "description": "Request failed. Internal controller error."
          }
        },
        "summary": "Get status of an analysis."
      }
    },
    "/api/analyses/{analysis_id}/workspace": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "This resource expects a file which will be placed in the analysis workspace identified by the UUID `analysis_id`.",
        "operationId": "seed_analysis",
        "parameters": [
          {
            "description": "Required. Organization which the analysis belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of analysis owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. Analysis UUID.",
            "in": "path",
            "name": "analysis_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. File to be transferred to the analysis workspace.",
            "in": "formData",
            "name": "file_content",
            "required": true,
            "type": "file"
          },
          {
            "description": "Required. File name.",
            "in": "query",
            "name": "file_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded. File successfully trasferred.",
            "examples": {
              "application/json": {
                "message": "File successfully transferred"
              }
            },
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed"
          }
        },
        "summary": "Seeds the analysis workspace with the provided file."
      }
    },
    "/api/ping": {
      "get": {
        "description": "Ping the server.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ping succeeded. Service is running and accessible.",
            "examples": {
              "application/json": {
                "message": "OK",
                "status": 200
              }
            },
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Ping the server (healthcheck)"
      }
    }
  },
  "swagger": "2.0",
  "tags": []
}